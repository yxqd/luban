#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                 Jiao Lin
#                      California Institute of Technology
#                      (C) 2006-2009  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


from luban.components.Actor import Actor as base


class ActorCodeEditor(base):


    class Inventory(base.Inventory):

        import pyre.inventory

        session_id = pyre.inventory.str('session_id')
        actor_id = pyre.inventory.str('actor_id')

        content = pyre.inventory.str('content')
        

    def processUpdate(self, director):
        session = self._getSession(director)
        
        focus = self._getFocus(director, session=session)
        actor_id = self.inventory.actor_id
        assert focus.id == actor_id, \
               'focus (%s, %s) and actor id (%s) not match' % (focus.name, focus.id, actor_id)

        focus.content = self.inventory.content
        director.clerk.updateRecordWithID(focus)

        return


    def __init__(self, name='actorcodeeditor'):
        super(ActorCodeEditor,self).__init__(name)
        return


    def _getSession(self, director):
        # session
        session_id = self.inventory.session_id
        if not session_id:
            self.inventory.session_id = session_id = 'fortest'
        session = director.clerk.getRecordByID('sessions', session_id)
        return session


    def _getFocus(self, director, session=None):
        if not session:
            session = self._getSession(director)
            
        db = director.clerk.db

        if session.categoryselection == 'visuals':
            focus = session.current_document
            if not focus or not focus.id:
                focus = session.current_visual

        elif session.categoryselection == 'actors':
            focus = session.current_actor

        if focus and focus.id:
            focus = focus.dereference(db)

        return focus



def actor():
    return ActorCodeEditor()


# version
__id__ = "$Id$"

# End of file 
