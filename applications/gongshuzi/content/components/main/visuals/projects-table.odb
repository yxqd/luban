#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                  Jiao Lin
#                     California Institute of Technology
#                       (C) 2009  All Rights Reserved
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


import luban.content as lc


def table(projects, director):
    try: return _table(projects, director)
    except:
        import traceback
        traceback.print_exc()
        

def _table(projects, director):
    
    session_id = director.actor.inventory.session_id
    
    from luban.content import load
    
    from luban.content.table import Model, View, Table
    
    class model(Model):

        name = Model.descriptors.str(name='name')
        time_created = Model.descriptors.str(name='time_created')
        select = Model.descriptors.link(name='select')
        

    view = View(
        
        columns = [
            View.Column(name='col1',label='Name', measure='name'),
            View.Column(name='col3',label='Created', measure='time_created'),
            View.Column(name='col2',label='Select this project', measure='select'),
            ],

        editable = False,
        )

    def getName(project):
        return project.projectname

    def getSelect(project):
        link = lc.link(
            label = 'Select',
            onclick = load(
                actor='gongshuzi', routine='loadProject',
                project_id = project.id, session_id = session_id),
            )
        return link

    def getTimeCreated(project):
        return str(project.time_created)
        return time.asctime(time.gmtime(project.time_created))
        
    import operator
    generators = {
        'name': getName,
        'select': getSelect,
        'time_created': getTimeCreated,
        }
    
    def d(s):
        r = []
        for col in view.columns:
            measure = col.measure
            value = generators[measure](s)
            r.append(value)
            continue
        return r
    data = [d(j) for j in projects]

    table = Table(model=model, data=data, view=view)

    return table



# version
__id__ = "$Id$"

# End of file 
