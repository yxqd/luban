# -*- python -*-


# create license.py if not exists
def create_license_py():
    target = 'license.py'
    src = '../../LICENSE'
    content = open(src).read()
    content = 'text = """%s"""' % content
    open(target, 'wt').write(content)
    return
create_license_py()


import merlin.rules, os
from merlin.Context import create
context = create()
context.code.project = 'luban'


rules = []
rules.append(
    merlin.rules.pythonPackage(package = 'luban')
    )


recurse_entries = []


# create minified js files for luban
def get_luban_core_js_modules():
    f = 'weaver/web/libraries/luban_js_core.py'
    s = open(f).read()
    d = {}
    exec(s, d)
    return  d['modules']
def merge_luban_core_js_modules(modules):
    dir  = 'weaver/web/javascripts/luban'
    all = []
    for mod in modules:
        f = os.path.join(dir, mod)
        s = open(f).read()
        all.append(s)
        continue

    all = '\n'.join(all)
    return all
modules = get_luban_core_js_modules()
merged = merge_luban_core_js_modules(modules)
output = 'weaver/web/javascripts/luban/luban-core-merged.js'
open(output,'w').write(merged)
# minify
merged = output
output = 'weaver/web/javascripts/luban/luban-core-mini.js'
cmd = 'yui-compressor -o %s %s' % (output, merged)
if os.system(cmd):
    raise RuntimeError("%r failed" % cmd)
# clean up
os.remove(merged)


# export css and js files
def rsync(src, target):
    if not os.path.exists(target):
        os.makedirs(target)
    cmd = "rsync -a --copy-unsafe-links %s/ %s/" % (src, target)

    from merlin import osutils
    rt, out, err = osutils.execute(cmd)

    if rt:
        raise OSError("%s failed" % cmd)
    return
from merlin.builders._utils import getExportPythonTree
export_pytree = getExportPythonTree(context)
target = os.path.join(export_pytree, 'luban', 'weaver', 'web')
import os
rsync('weaver/web/css', os.path.join(target, 'css'))
rsync('weaver/web/javascripts', os.path.join(target, 'javascripts'))

# hsnapshot.jar
import shutil
targetdir = os.path.join(export_pytree, 'luban', 'controller')
if not os.path.exists(targetdir): os.makedirs(targetdir)
shutil.copyfile('controller/hsnapshot.jar', os.path.join(export_pytree, 'luban', 'controller', 'hsnapshot.jar'))


