# -*- Python -*-
# -*- coding: utf-8 -*-
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                   Jiao Lin
#                      California Institute of Technology
#                      (C) 2006-2010  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


import luban.content as lc
from luban.content import select, alert, load


collabels = {
    'selected': '',
    'h': 'h',
    'k': 'k',
    'l': 'l',
    'twotheta': u'2\u03b8',
    'theta': u'\u03b8',
    'omega': u'\u03c9',
    'chi': u'\u03c7',
    'phi': u'\u03c6',
    }


def visual(director=None, cols=None,
           Class='cols-table', id=None):

    # to construct a table, a model, a view, and a list of data are needed
    from luban.content.table import Model, View, Table
    # first the model
    class model(Model):
        
        selected = Model.descriptors.bool(name='selected')
        colname = Model.descriptors.str(name='colname')
        collabel = Model.descriptors.str(name='collabel')
        row_identifiers = ['colname']

    # then the view
    columns = [
        View.Column(label='', measure='selected'),
        View.Column(label='Column', measure='collabel'),
        View.Column(label='Column', measure='colname', hidden=True),
        ]
    view = View(columns = columns, editable = False, sortable = False)
    
    # data: a list of rows. each row is a tuple of values for all cells in the row
    data = []
    for col in cols:
        data.append((True, collabels[col], col))
        continue
    
    # now the table
    ret = Table(model=model, data=data, view=view, id=id)
    ret.Class = Class
    
    return ret


# version
__id__ = "$Id$"

# End of file 
