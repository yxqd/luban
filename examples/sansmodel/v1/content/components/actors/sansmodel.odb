# -*- python -*-

from luban.content import select, load, alert
import luban.content as lc



from luban.components.Actor import Actor as base

class Actor(base):


    class Inventory(base.Inventory):

        import pyre.inventory
	radius = pyre.inventory.float(name='radius')
	Qmin = pyre.inventory.float(name='Qmin')
	Qmax = pyre.inventory.float(name='Qmax')
	Qstep = pyre.inventory.float(name='Qstep')

        
    def default(self, director):
        vis = director.retrieveVisual("sansmodel")
	form = vis.find(id='sansmodel-form')
	form.onsubmit = select(element=form).submit(actor=self.name, routine='process')
        return vis


    def process(self, director):
        radius = self.inventory.radius
        Qmin = self.inventory.Qmin
        Qmax = self.inventory.Qmax
        Qstep = self.inventory.Qstep
	        
	from sans.models.SphereModel import SphereModel
	model = SphereModel()
	model.setParam('radius', radius)
	
	import numpy as np
	Qarray = np.arange(Qmin, Qmax, Qstep)
	Iarray = [model.run(Q) for Q in Qarray]
	
	plot = lc.plot2d()
	plot.curve(x=list(Qarray), y=list(Iarray))
	
	return select(id='output-container').replaceContent(plot)


def actor():
    return Actor("sansmodel")
