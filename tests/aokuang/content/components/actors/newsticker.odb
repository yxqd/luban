#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                 Jiao Lin
#                      California Institute of Technology
#                      (C) 2006-2010  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


import luban.content
from luban.content import select, load, alert


from aokuang.components.WidgetDemoActor import Actor as base, panel, example, quickpanel
class Actor(base):


    from luban.content.NewsTicker import NewsTicker as widget
    
    
    class Inventory(base.Inventory):

        import pyre.inventory

        item = pyre.inventory.str(name='item')

    introduction = '''
This is a demo of widget "newsticker".
'''

    @quickpanel(
        title = 'Basic usages',
        description =  [
          ],
        examples = ['basic_usage%s' % (i+1) for i in range(1)],
        )
    def basic_usages(self): pass


    @example(
        title='A news ticker',
        description = [
          'You will see news scrolling every three seconds, and a refresh event triggers',
          'every 5 seconds. Clicking the news "apple launched ipad" will pop up a dialog',
          ]
        )
    def basic_usage1(self, director):
        doc = luban.content.document()
        
        newsticker = luban.content.newsticker(title='news')
        newsticker.delay = 3
        newsticker.refreshtime = 5

        doc.add(newsticker)
        
        newsticker.item(
            text='apple launched ipad',
            onclick=load(actor=self.name, routine='showItem', item='appleipad'),
            )
        newsticker.item(text='Oracle buying drug trials software maker for $685 million')
        newsticker.item(text='RAID Made Easy')
        newsticker.item(text="Apple Rejects Pulitzer Prize Winner's App")

        msgdoc = doc.document(title='messages')
        newsticker.onrefresh = select(element=msgdoc).append(
            luban.content.paragraph(text='refresh'))
        
        return doc


    def showItem(self, director):
        # could make the dialog content depending on the item value
        item = self.inventory.item
        
        # create dialog
        dialog = luban.content.dialog(title='apple launched ipad', autoopen=True)
        # add a paragraph
        dialog.paragraph(text='apple launched ipad!')

        # add a button
        okbutton = luban.content.button(
            label='OK',
            onclick=select(element=dialog).destroy()
            )
        dialog.add(okbutton)

        return select(id='').append(dialog)

    
def actor():
    return Actor('newsticker')


# version
__id__ = "$Id$"

# End of file 
