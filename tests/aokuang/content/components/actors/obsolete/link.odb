#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                 Jiao Lin
#                      California Institute of Technology
#                      (C) 2006-2009  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#

from luban.content.Link import Link
from luban.content.Document import Document
from luban.content.FormTextField import FormTextField
from luban.content.FormPasswordField import FormPasswordField
from luban.content.FormTextArea import FormTextArea
from luban.content.FormSelectorField import FormSelectorField
from luban.content.FormRadioBox import FormRadioBox
from luban.content.FormCheckBox import FormCheckBox

from luban.content import select, load

from luban.components.Actor import Actor as base
class Actor(base):

    class Inventory(base.Inventory):

        import pyre.inventory

        username = pyre.inventory.str('username')
        password = pyre.inventory.str('password')
        comment = pyre.inventory.str('comment')
        organization = pyre.inventory.int('organization') # selector
        gender = pyre.inventory.int('gender') # radio
        interest_physics = pyre.inventory.bool('interest_physics')
        interest_math = pyre.inventory.bool('interest_math')


    def default(self, director):
        from luban.content.Page import Page
        page = Page(title='test link')
        document = page.document(title='test link', id='maindoc')
        newcontent = Document(title='new document')
        link = Link(label='click me', tip='tip',
                        onclick=select(id='maindoc').replaceContent(newcontent))
        document.add(link)
        return page


    def test2(self, director):
        'submit a "form" without really using a form'
        from luban.content.Page import Page
        page = Page(title='test link: load with parameter calculated from action')
        document = page.document(title='test link', id='maindoc')

        #
        usernamefield = FormTextField(label='Username')
        document.add(usernamefield)

        passwordfield = FormPasswordField(label='Password')
        document.add(passwordfield)

        commentfield = FormTextField(label='Comment')
        document.add(commentfield)

        organizationfield = FormSelectorField(
            label='Organization',
            entries = enumerate(organizations),
            selection = 'CIT',
            )
        document.add(organizationfield)

        genderfield = FormRadioBox(
            label='Gender',
            entries = enumerate(genders),
            selection = 'male',
            )
        document.add(genderfield)

        interest_physics_field = FormCheckBox(label='physics')
        document.add(interest_physics_field)

        interest_math_field = FormCheckBox(label='math')
        document.add(interest_math_field)

        #
        link = Link(label='click me', tip='click here to submit your input')
        link.onclick = load(
            actor='testlink', routine='onclick_test2',
            username = select(element=usernamefield).getAttr('value'),
            password = select(element=passwordfield).getAttr('value'),
            comment = select(element=commentfield).getAttr('value'),
            organization = select(element=organizationfield).getAttr('value'),
            gender = select(element=genderfield).getAttr('value'),
            interest_physics = select(element=interest_physics_field).getAttr('value'),
            interest_math = select(element=interest_math_field).getAttr('value'),
            )
        document.add(link)
        
        return page
        

    def onclick_test2(self, director):
        newcontent = Document(title='submitted info')
        
        username = self.inventory.username
        p = newcontent.paragraph()
        p.text = ['Username: %s' % username]
        
        password = self.inventory.password
        p = newcontent.paragraph()
        p.text = ['Password: %s' % password]
        
        comment = self.inventory.comment
        p = newcontent.paragraph()
        p.text = ['Comment: %s' % comment]
        
        organization = self.inventory.organization
        p = newcontent.paragraph()
        p.text = ['Organization: %s' % organizations[organization]]
        
        gender = self.inventory.gender
        p = newcontent.paragraph()
        p.text = ['Gender: %s' % genders[gender]]

        interested = filter(
            lambda interest: getattr(self.inventory, 'interest_'+interest),
            interests)
        p = newcontent.paragraph()
        p.text = ['interests: %s' % ','.join(interested)]
        
        return select(id='maindoc').replaceContent(newcontent)


organizations = ['CIT', 'Columbia', 'IOWA', 'NIST']
genders = ['male', 'female']
interests = ['physics', 'math']

def actor():
    return Actor('testlink')


# version
__id__ = "$Id$"

# End of file    
        
