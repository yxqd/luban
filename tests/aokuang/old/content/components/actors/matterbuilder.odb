#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#                      California Institute of Technology
#                      (C) 2006-2009  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


import luban.content as lc

from luban.content import select, load

from luban.components.Actor import Actor as base
class Actor(base):

    class Inventory(base.Inventory):

        import pyre.inventory

    def default(self, director):
        page = director.retrieveVisual('default')
        document = page.maindoc.document(title='Test matter builder file loading')
        
        container = document.document()
        view1 = self.createMatterView(director); container.add(view1)
        
        b1 = lc.button(label='destroy matter view'); document.add(b1)
        b1.onclick = select(id='matterview').destroy()
        
        b = lc.button(label='load a matter view'); document.add(b)
        b.onclick = select(element=container).replaceContent(
            load(actor=self.name, routine='createMatterView'))
        
        return page
    

    def createMatterView(self, director):
        from luban.content.science.MatterBuilder import MatterBuilder
        mb = MatterBuilder(id='matterview')
        mb.lattice = [[5,0,0],[-1,5,0],[0,0,5]]
        mb.atoms = [['Fe', [0.5,0.5,0.5]], ['C', [2.5,2.5,2.5]]]
        #mb.bonds = [ [[0.5,0.5,0.5],[2.5,2.5,2.5]]]
        return mb

    def test2(self, director):
        page = director.retrieveVisual('default')
        document = page.maindoc.document(title='Test matter builder rendering')
        
        from luban.content.science.MatterBuilder import MatterBuilder
        mb = MatterBuilder()
        mb.load_file()
        mb.render()
        document.add(mb)
        
        return page

def actor():
    return Actor('matterbuilder')

# version
__id__ = "$Id$"

# End of file 
