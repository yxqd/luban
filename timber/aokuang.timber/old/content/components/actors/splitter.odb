#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                 Jiao Lin
#                      California Institute of Technology
#                      (C) 2006-2009  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#


import luban.content
from luban.content import select, load, alert


from aokuang.components.WidgetDemoActor import Actor as base, panel, example, quickpanel
class Actor(base):


    from luban.content.Splitter import Splitter as widget
    

    class Inventory(base.Inventory):

        import pyre.inventory

    
    introduction = '''
This is a demo of widget "splitter".

Widget "splitter" separates a visual into two parts horizontally or vertically.
For more complex layout, please use grid.
'''

    @quickpanel(
        title = 'Basic usages',
        description =  [
          ],
        examples = ['basic_usage%s' % (i+1) for i in range(1)],
        )
    def basic_usages(self): pass


    @example(
        title='A simple example',
        description = [
        """The layout ::

  -----------------------------------------------------
  | top left         | middle            | right      |
  |------------------|                   |            |
  | bottom left      |                   |            |
  -----------------------------------------------------

"""
          ]
        )
    def basic_usage1(self, director):
        lc = luban.content

        #
        frames = lc.splitter()
        frames.orientation = 'horizontal'

        # left, middle, right
        frameleft = frames.section()
        framemiddle = frames.section()
        framemiddle.paragraph(text=['using Splitter: middle'])
        frames.section().paragraph(text=['using Splitter: right'])

        # split left to two parts
        insideframe = lc.splitter()
        frameleft.add(insideframe)
        insideframe.orientation = 'vertical'
        insideframe.section().paragraph(text=['using Splitter: top left'])
        insideframe.section().paragraph(text=['using Splitter: bottom left'])
        
        return frames
    

def actor():
    return Actor('splitter')


# version
__id__ = "$Id$"

# End of file 
