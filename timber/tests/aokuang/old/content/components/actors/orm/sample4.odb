#!/usr/bin/env python
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#                                 Jiao Lin
#                      California Institute of Technology
#                      (C) 2006-2009  All Rights Reserved
#
# {LicenseText}
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#

# test orm-generated view of a data object with a non-polymorphic, owned reference

#
import luban.content as lc
from luban.content import select, load, alert


#
from aokuang.dom.Sample4 import Sample4
from aokuang.dom import shapes

from luban.components.Actor import Actor
import luban.orm
base = luban.orm.object2actor(Sample4, ActorBase=Actor)
class Actor(base):

    class Inventory(base.Inventory):

        import luban.inventory

        
    def default(self, director):
        # create sample
        sample = Sample4()

        # set shape of sample to this loaded cylinder
        sample.shape = shapes.Cylinder()

        # save sample to db
        orm = director.clerk.orm
        orm.save(sample)

        # the db record
        record = orm(sample)

        # the view
        self.inventory.id = record.id
        view = self.edit(director)

        # create skeleton and add view
        frame = lc.frame(title='title')
        document = frame.document(title='test', id='maindoc')
        document.add(view)
        return frame


    def none(self, director):
        frame = lc.frame(title='title')
        
        document = frame.document(title='test', id='maindoc')

        sample = Sample4()
        sample.shape = None

        orm = director.clerk.orm
        orm.save(sample)

        self.inventory.id = orm(sample).id
        view = self.edit(director)
        
        document.add(view)
            
        return frame


def actor():
    return Actor('orm/sample4')


# version
__id__ = "$Id$"

# End of file 
